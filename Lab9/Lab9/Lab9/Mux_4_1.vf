////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mux_4_1.vf
// /___/   /\     Timestamp : 10/30/2022 19:18:03
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/DreaMxickZen/Desktop/DigitalLab/Lab9/Lab9/Mux_4_1.vf -w C:/Users/DreaMxickZen/Desktop/DigitalLab/Lab9/Lab9/Mux_4_1.sch
//Design Name: Mux_4_1
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Mux_4_1 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 1ns / 1ps

module Mux_4_1(A_0, 
               A_1, 
               A_2, 
               A_3, 
               BIT, 
               B_0, 
               B_1, 
               B_2, 
               B_3, 
               C_0, 
               C_1, 
               C_2, 
               C_3, 
               D_0, 
               D_1, 
               D_2, 
               D_3, 
               AA, 
               BB, 
               CC, 
               DD);

    input A_0;
    input A_1;
    input A_2;
    input A_3;
    input [1:0] BIT;
    input B_0;
    input B_1;
    input B_2;
    input B_3;
    input C_0;
    input C_1;
    input C_2;
    input C_3;
    input D_0;
    input D_1;
    input D_2;
    input D_3;
   output AA;
   output BB;
   output CC;
   output DD;
   
   wire XLXN_10;
   
   (* HU_SET = "XLXI_1_0" *) 
   M4_1E_HXILINX_Mux_4_1  XLXI_1 (.D0(A_0), 
                                 .D1(B_0), 
                                 .D2(C_0), 
                                 .D3(D_0), 
                                 .E(XLXN_10), 
                                 .S0(BIT[0]), 
                                 .S1(BIT[1]), 
                                 .O(AA));
   (* HU_SET = "XLXI_2_1" *) 
   M4_1E_HXILINX_Mux_4_1  XLXI_2 (.D0(A_1), 
                                 .D1(B_1), 
                                 .D2(C_1), 
                                 .D3(D_1), 
                                 .E(XLXN_10), 
                                 .S0(BIT[0]), 
                                 .S1(BIT[1]), 
                                 .O(BB));
   (* HU_SET = "XLXI_3_2" *) 
   M4_1E_HXILINX_Mux_4_1  XLXI_3 (.D0(A_2), 
                                 .D1(B_2), 
                                 .D2(C_2), 
                                 .D3(D_2), 
                                 .E(XLXN_10), 
                                 .S0(BIT[0]), 
                                 .S1(BIT[1]), 
                                 .O(CC));
   (* HU_SET = "XLXI_4_3" *) 
   M4_1E_HXILINX_Mux_4_1  XLXI_4 (.D0(A_3), 
                                 .D1(B_3), 
                                 .D2(C_3), 
                                 .D3(D_3), 
                                 .E(XLXN_10), 
                                 .S0(BIT[0]), 
                                 .S1(BIT[1]), 
                                 .O(DD));
   VCC  XLXI_5 (.P(XLXN_10));
endmodule
