////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mixbus1_16.vf
// /___/   /\     Timestamp : 10/30/2022 19:18:05
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/DreaMxickZen/Desktop/DigitalLab/Lab9/Lab9/Mixbus1_16.vf -w C:/Users/DreaMxickZen/Desktop/DigitalLab/Lab9/Lab9/Mixbus1_16.sch
//Design Name: Mixbus1_16
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mixbus1_16(BIT, 
                  BIT_0, 
                  BIT_1, 
                  BIT_2, 
                  BIT_3, 
                  BIT_4, 
                  BIT_5, 
                  BIT_6, 
                  BIT_7, 
                  BIT_8, 
                  BIT_9, 
                  BIT_10, 
                  BIT_11, 
                  BIT_12, 
                  BIT_13, 
                  BIT_14, 
                  BIT_15);

    input [15:0] BIT;
   output BIT_0;
   output BIT_1;
   output BIT_2;
   output BIT_3;
   output BIT_4;
   output BIT_5;
   output BIT_6;
   output BIT_7;
   output BIT_8;
   output BIT_9;
   output BIT_10;
   output BIT_11;
   output BIT_12;
   output BIT_13;
   output BIT_14;
   output BIT_15;
   
   wire XLXN_12;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   
   INV  XLXI_3 (.I(BIT[0]), 
               .O(XLXN_12));
   INV  XLXI_4 (.I(XLXN_12), 
               .O(BIT_0));
   INV  XLXI_7 (.I(BIT[1]), 
               .O(XLXN_15));
   INV  XLXI_8 (.I(XLXN_15), 
               .O(BIT_1));
   INV  XLXI_9 (.I(BIT[2]), 
               .O(XLXN_16));
   INV  XLXI_10 (.I(XLXN_16), 
                .O(BIT_2));
   INV  XLXI_11 (.I(BIT[3]), 
                .O(XLXN_17));
   INV  XLXI_12 (.I(XLXN_17), 
                .O(BIT_3));
   INV  XLXI_13 (.I(BIT[4]), 
                .O(XLXN_18));
   INV  XLXI_14 (.I(XLXN_18), 
                .O(BIT_4));
   INV  XLXI_17 (.I(BIT[5]), 
                .O(XLXN_20));
   INV  XLXI_18 (.I(XLXN_20), 
                .O(BIT_5));
   INV  XLXI_19 (.I(BIT[6]), 
                .O(XLXN_21));
   INV  XLXI_20 (.I(XLXN_21), 
                .O(BIT_6));
   INV  XLXI_21 (.I(BIT[7]), 
                .O(XLXN_22));
   INV  XLXI_22 (.I(XLXN_22), 
                .O(BIT_7));
   INV  XLXI_23 (.I(BIT[8]), 
                .O(XLXN_23));
   INV  XLXI_24 (.I(XLXN_23), 
                .O(BIT_8));
   INV  XLXI_25 (.I(BIT[9]), 
                .O(XLXN_24));
   INV  XLXI_26 (.I(XLXN_24), 
                .O(BIT_9));
   INV  XLXI_27 (.I(BIT[10]), 
                .O(XLXN_25));
   INV  XLXI_28 (.I(XLXN_25), 
                .O(BIT_10));
   INV  XLXI_29 (.I(BIT[11]), 
                .O(XLXN_26));
   INV  XLXI_30 (.I(XLXN_26), 
                .O(BIT_11));
   INV  XLXI_31 (.I(BIT[12]), 
                .O(XLXN_27));
   INV  XLXI_32 (.I(XLXN_27), 
                .O(BIT_12));
   INV  XLXI_33 (.I(BIT[13]), 
                .O(XLXN_28));
   INV  XLXI_34 (.I(XLXN_28), 
                .O(BIT_13));
   INV  XLXI_35 (.I(BIT[14]), 
                .O(XLXN_29));
   INV  XLXI_36 (.I(XLXN_29), 
                .O(BIT_14));
   INV  XLXI_37 (.I(BIT[15]), 
                .O(XLXN_30));
   INV  XLXI_38 (.I(XLXN_30), 
                .O(BIT_15));
endmodule
